{"mappings":"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","sources":["src/js/app.js"],"sourcesContent":["const navLinks = document.querySelectorAll('.navigation a');\r\nconst sections = document.querySelectorAll('.sections section');\r\n\r\nlet isScrollEnabled = true;\r\n\r\n// Deshabilitar el scroll en el documento\r\nfunction disableScroll() {\r\n    document.body.style.overflow = 'hidden';\r\n}\r\n\r\n// Habilitar el scroll en el documento\r\nfunction enableScroll() {\r\n    document.body.style.overflow = 'auto';\r\n}\r\n\r\nnavLinks.forEach(link => {\r\n    link.addEventListener('click', e => {\r\n        e.preventDefault();\r\n        if (isScrollEnabled) {\r\n            isScrollEnabled = false;\r\n            disableScroll();\r\n\r\n            const targetSectionId = e.target.getAttribute('href');\r\n            const targetSection = document.querySelector(targetSectionId);\r\n\r\n            if (targetSection) {\r\n                window.scrollTo({\r\n                    top: targetSection.offsetTop - 80, // Ajusta el valor según el espacio del banner\r\n                    behavior: 'smooth'\r\n                });\r\n\r\n                // Habilitar el scroll después de un tiempo para evitar el desplazamiento continuo\r\n                setTimeout(() => {\r\n                    isScrollEnabled = true;\r\n                    enableScroll();\r\n                }, 1000); // Ajusta el tiempo según tus necesidades\r\n            }\r\n        }\r\n    });\r\n});\r\n\r\nconst menuButton = document.querySelector('.menu-btn');\r\nconst sideMenu = document.querySelector('.side-menu');\r\n\r\n// Abrir el menú\r\nmenuButton.addEventListener('click', () => {\r\n    sideMenu.classList.toggle('menu-open');\r\n});\r\n\r\n// Cerrar el menú al hacer clic por fuera\r\ndocument.addEventListener('click', (e) => {\r\n    if (!sideMenu.contains(e.target) && !menuButton.contains(e.target)) {\r\n        sideMenu.classList.remove('menu-open');\r\n    }\r\n});\r\n\r\nnavLinks.forEach(link => {\r\n    link.addEventListener('click', e => {\r\n        e.preventDefault();\r\n\r\n        // Cerrar el menú\r\n        sideMenu.classList.remove('menu-open');\r\n\r\n        const targetSectionId = e.target.getAttribute('href');\r\n        const targetSection = document.querySelector(targetSectionId);\r\n\r\n        if (targetSection) {\r\n            sections.forEach(section => {\r\n                section.classList.remove('active'); // Ocultar todas las secciones\r\n            });\r\n\r\n            targetSection.classList.add('active'); // Mostrar solo la sección activa\r\n        }\r\n    });\r\n});\r\n\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    const sections = document.querySelectorAll(\"section\");\r\n\r\n    // Oculta todas las secciones al cargar la página\r\n    sections.forEach(section => {\r\n        section.hidden = true;\r\n    });\r\n\r\n    // Muestra la primera sección\r\n    sections[0].hidden = false;\r\n\r\n    // Cuando se hace clic en un elemento del menú, muestra la sección correspondiente\r\n    const menuItems = document.querySelectorAll(\".side-menu a\"); // Cambia el selector a .side-menu a\r\n    menuItems.forEach(item => {\r\n        item.addEventListener(\"click\", event => {\r\n            event.preventDefault();\r\n            const targetSectionId = event.target.getAttribute(\"href\");\r\n            const targetSection = document.querySelector(targetSectionId);\r\n            if (targetSection) {\r\n                sections.forEach(section => {\r\n                    section.hidden = true;\r\n                });\r\n                targetSection.hidden = false;\r\n                window.location.hash = targetSectionId; // Cambia la URL según la sección\r\n            }\r\n        });\r\n    });\r\n});\r\n\r\ndocument.addEventListener(\"DOMContentLoaded\", function () {\r\n    $(\".gallery-carousel\").slick({\r\n        slidesToShow: 1, // Muestra una imagen a la vez\r\n        slidesToScroll: 1, // Número de imágenes a desplazar por vez\r\n        autoplay: true, // Reproducción automática\r\n        autoplaySpeed: 3000, // Velocidad de cambio de imagen (en milisegundos)\r\n        arrows: false, // Desactiva las flechas de navegación\r\n        dots: true // Activa los puntos de navegación\r\n    });\r\n});\r\n\r\n\r\n//js de agendar\r\n/*\r\nconst barberoSelect = document.getElementById(\"barbero\");\r\nconst fechaInput = document.getElementById(\"fecha\");\r\nconst horaInput = document.getElementById(\"hora\");\r\nconst clienteInput = document.getElementById(\"cliente\");\r\nconst agendarBtn = document.getElementById(\"agendarBtn\");\r\n\r\nagendarBtn.addEventListener(\"click\", function () {\r\n    const selectedBarbero = barberoSelect.value;\r\n    const fecha = fechaInput.value;\r\n    const hora = horaInput.value;\r\n    const cliente = clienteInput.value;\r\n\r\n    if (selectedBarbero && fecha && hora && cliente) {\r\n        const mensaje = `¡Hola ${selectedBarbero}! Tienes una cita agendada para el ${fecha} a las ${hora} con el cliente ${cliente}.`;\r\n        const encodedMensaje = encodeURIComponent(mensaje);\r\n\r\n        const telefonoBarbero = \"573126204076\";\r\n        const url = `https://wa.me/${telefonoBarbero}/?text=${encodedMensaje}`;\r\n\r\n        window.location.href = url;\r\n\r\n        const cita = {\r\n            barbero: selectedBarbero,\r\n            fecha: fecha,\r\n            hora: hora,\r\n            cliente: cliente\r\n        };\r\n\r\n        localStorage.setItem(\"cita\", JSON.stringify(cita));\r\n    } else {\r\n        alert(\"Por favor, completa todos los campos antes de agendar la cita.\");\r\n    }\r\n});\r\n\r\n\r\n//js de reservas\r\n\r\n// Obtener el contenedor de reservas\r\nconst reservasContainer = document.getElementById(\"reservasContainer\");\r\n\r\n// Función para mostrar las reservas\r\nfunction mostrarReservas() {\r\n    // Obtener las reservas almacenadas en localStorage\r\n    const reservas = JSON.parse(localStorage.getItem(\"cita\")) || [];\r\n\r\n    // Limpiar el contenido actual del contenedor\r\n    reservasContainer.innerHTML = \"\";\r\n\r\n    // Verificar si hay reservas para mostrar\r\n    if (reservas.length === 0) {\r\n        reservasContainer.innerHTML = \"<p>No hay reservas agendadas.</p>\";\r\n\r\n    } else {\r\n        // Crear una lista de reservas\r\n        const listaReservas = document.createElement(\"ul\");\r\n\r\n        // Iterar a través de las reservas y agregarlas a la lista\r\n        reservas.forEach((reserva, index) => {\r\n            const listItem = document.createElement(\"li\");\r\n            listItem.innerHTML = `<strong>Reserva ${index + 1}:</strong> Barbero: ${reserva.barbero}, Fecha: ${reserva.fecha}, Hora: ${reserva.hora}, Cliente: ${reserva.cliente}`;\r\n            listaReservas.appendChild(listItem);\r\n        });\r\n        // Agregar la lista de reservas al contenedor\r\n        reservasContainer.appendChild(listaReservas);\r\n    }\r\n}\r\n// Llamar a la función para mostrar las reservas al cargar la página\r\nmostrarReservas();\r\n*/\r\n\r\n// Obtener el contenedor de reservas\r\nconst reservasContainer = document.getElementById(\"reservasContainer\");\r\n\r\n// Función para mostrar las reservas\r\nfunction mostrarReservas() {\r\n    // Obtener las reservas almacenadas en localStorage\r\n    const reservas = JSON.parse(localStorage.getItem(\"reservas\")) || [];\r\n\r\n    // Limpiar el contenido actual del contenedor\r\n    reservasContainer.innerHTML = \"\";\r\n\r\n    // Verificar si hay reservas para mostrar\r\n    if (reservas.length === 0) {\r\n        reservasContainer.innerHTML = \"<p>No hay reservas agendadas.</p>\";\r\n    } else {\r\n        // Crear una lista de reservas\r\n        const listaReservas = document.createElement(\"ul\");\r\n\r\n        // Iterar a través de las reservas y agregarlas a la lista\r\n        reservas.forEach((reserva, index) => {\r\n            const listItem = document.createElement(\"li\");\r\n            listItem.innerHTML = `<strong>Reserva ${index + 1}:</strong> Barbero: ${reserva.barbero}, Fecha: ${reserva.fecha}, Hora: ${reserva.hora}, Cliente: ${reserva.cliente}`;\r\n            listaReservas.appendChild(listItem);\r\n        });\r\n\r\n        // Agregar la lista de reservas al contenedor\r\n        reservasContainer.appendChild(listaReservas);\r\n    }\r\n}\r\n\r\n// Llamar a la función para mostrar las reservas al cargar la página\r\nmostrarReservas();\r\n\r\n// Obtener elementos del formulario de agendar\r\nconst barberoSelect = document.getElementById(\"barbero\");\r\nconst fechaInput = document.getElementById(\"fecha\");\r\nconst horaInput = document.getElementById(\"hora\");\r\nconst clienteInput = document.getElementById(\"cliente\");\r\nconst agendarBtn = document.getElementById(\"agendarBtn\");\r\n\r\n// Manejar el evento de clic en el botón de agendar\r\nagendarBtn.addEventListener(\"click\", function () {\r\n    const selectedBarbero = barberoSelect.value;\r\n    const fecha = fechaInput.value;\r\n    const hora = horaInput.value;\r\n    const cliente = clienteInput.value;\r\n\r\n    if (selectedBarbero && fecha && hora && cliente) {\r\n        // Obtener las reservas actuales desde localStorage\r\n        const reservas = JSON.parse(localStorage.getItem(\"reservas\")) || [];\r\n\r\n        \r\n        const mensaje = `¡Hola ${selectedBarbero}! Tienes una cita agendada para el ${fecha} a las ${hora} con el cliente ${cliente}.`;\r\n        const encodedMensaje = encodeURIComponent(mensaje);\r\n\r\n        const telefonoBarbero = \"573126204076\";\r\n        const url = `https://wa.me/${telefonoBarbero}/?text=${encodedMensaje}`;\r\n\r\n        window.location.href = url;\r\n\r\n\r\n        // Crear un objeto de reserva\r\n        const cita = {\r\n            barbero: selectedBarbero,\r\n            fecha: fecha,\r\n            hora: hora,\r\n            cliente: cliente\r\n        };\r\n\r\n        // Agregar la reserva al arreglo de reservas\r\n        reservas.push(cita);\r\n\r\n        // Guardar el arreglo actualizado en localStorage\r\n        localStorage.setItem(\"reservas\", JSON.stringify(reservas));\r\n\r\n        // Llamar a la función para mostrar las reservas actualizadas\r\n        mostrarReservas();\r\n\r\n        // Restablecer los campos del formulario\r\n        barberoSelect.value = \"\";\r\n        fechaInput.value = \"\";\r\n        horaInput.value = \"\";\r\n        clienteInput.value = \"\";\r\n\r\n        alert(\"Cita agendada con éxito.\");\r\n    } else {\r\n        alert(\"Por favor, completa todos los campos antes de agendar la cita.\");\r\n    }\r\n});\r\n"],"names":[],"version":3,"file":"index.8f0c9192.js.map","sourceRoot":"/__parcel_source_root/"}